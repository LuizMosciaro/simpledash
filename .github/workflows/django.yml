name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      env:
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          ALPHA_AVANTAGE_API: ${{ secrets.ALPHA_AVANTAGE_API }}
      run: |
        python manage.py test
        
  retry-failed:
    needs: build
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: ["${{ env.FAILED_PYTHON_VERSION }}"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        env:
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          ALPHA_AVANTAGE_API: ${{ secrets.ALPHA_AVANTAGE_API }}
        run: |
          python manage.py test
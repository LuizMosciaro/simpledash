name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Tests
        env:
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          ALPHA_AVANTAGE_API: ${{ secrets.ALPHA_AVANTAGE_API }}
          FAILED_PYTHON_VERSION: ${{ matrix.python-version }}
        run: |
          if [ "${{ matrix.python-version }}" = "${{ FAILED_PYTHON_VERSION }}" ]; then
            python manage.py test
          else
            echo "Skipping test for Python version ${{ matrix.python-version }} since it didn't fail"
          fi

  retry-failed:
    needs: build
    if: ${{ failure() }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["${{ FAILED_PYTHON_VERSION }}"]
    steps:     
      - name: Retry Failed Job
        env:
          WEATHER_API_KEY: ${{ secrets.WEATHER_API_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          ALPHA_AVANTAGE_API: ${{ secrets.ALPHA_AVANTAGE_API }}
        uses: nick-fields/retry@v2
        with:
          max_attempts: 3
          retry_on: error
          timeout_seconds: 5
          command: |
            python manage.py test
